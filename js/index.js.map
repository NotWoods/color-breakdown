{"version":3,"file":"index.js","sources":["../../src/revoke-object-url.ts","../../src/page/clipboard.ts","../../src/page/render-color-text.ts","../../src/page/render-swatch.ts","../../src/page/render-palette.ts","../../src/page/render-image.ts","../../src/page/list.ts","../../src/page/back-button.ts","../../src/page/main-palette.ts","../../src/page/handle-message.ts","../../src/page/process-images.ts","../../src/page/index.ts"],"sourcesContent":["/**\n * Revoke a url if it is an object url.\n */\nexport function revokeIfObjectUrl(url: string) {\n    if (new URL(url).protocol === 'blob:') {\n        URL.revokeObjectURL(url);\n    }\n}\n\n/**\n * When used as an `onload` listener for an image, this function will\n * revoke the image's source object url if it is an object url.\n */\nexport function revokeObjectUrlOnLoad(evt: Event) {\n    const img = evt.target as HTMLImageElement;\n    revokeIfObjectUrl(img.src);\n}\n","const ClipboardModule = navigator.clipboard || import('./clipboard-polyfill');\n\n/**\n * Copies the color text displayed in a swatch.\n * @throws If user denies copy permission or copying fails\n */\nexport async function copySwatchText(event: Event) {\n    const btn = (event.target as Element).closest('button.swatch');\n    const span = btn && btn.querySelector('.swatch-text');\n    const textContent = span && span.textContent;\n\n    if (textContent) {\n        const clipboard = await ClipboardModule;\n        await clipboard.writeText(textContent);\n    }\n}\n","type Vec3 = [number, number, number];\nexport type ColorTextType = 'HEX' | 'RGB' | 'HSL';\n\ninterface ColorTextProps {\n    readonly colorTextType: ColorTextType;\n    readonly hexColor: string;\n}\n\n// Helpers from Vibrant.Util\nfunction hexToRgb(hex: string): Vec3 | undefined {\n    let match = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i.exec(hex);\n    if (match == undefined) return undefined;\n\n    const vector = [match[1], match[2], match[3]].map(s => parseInt(s, 16));\n    return vector as Vec3;\n}\nfunction rgbToHsl(r: number, g: number, b: number): Vec3 {\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    let max = Math.max(r, g, b);\n    let min = Math.min(r, g, b);\n    let h: number;\n    let s: number;\n    let l = (max + min) / 2;\n    if (max === min) {\n        h = s = 0;\n    } else {\n        let d = max - min;\n        s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n        switch (max) {\n            case r:\n                h = (g - b) / d + (g < b ? 6 : 0);\n                break;\n            case g:\n                h = (b - r) / d + 2;\n                break;\n            case b:\n                h = (r - g) / d + 4;\n                break;\n            default:\n                throw new Error();\n        }\n\n        h /= 6;\n    }\n    return [h, s, l];\n}\n\n/**\n * Renders the text representing a color. Formats based on the given color\n * text type.\n */\nexport function renderColorText(props: ColorTextProps) {\n    switch (props.colorTextType) {\n        case 'RGB':\n        case 'HSL':\n            const rgb = hexToRgb(props.hexColor);\n            if (rgb == undefined) {\n                return props.hexColor;\n            }\n            const [r, g, b] = rgb;\n            if (props.colorTextType === 'RGB') {\n                return `R${r} G${g} B${b}`;\n            }\n            const [h, s, l] = rgbToHsl(r, g, b).map(n => Math.round(n * 100));\n            return `H${h} S${s} L${l}`;\n        case 'HEX':\n        default:\n            return props.hexColor;\n    }\n}\n","import { ColorSwatch } from '../color-interfaces';\nimport { ColorTextType, renderColorText } from './render-color-text';\n\ninterface SwatchProps {\n    readonly color?: ColorSwatch;\n    readonly colorTextType?: ColorTextType;\n}\n\n/**\n * Renders a swatch: the element that displays a color for the user to look at.\n */\nexport function renderSwatch(props: SwatchProps, target: HTMLElement) {\n    const isVisible = props.color != undefined;\n    const isTextSwatch = props.colorTextType != undefined;\n    target.hidden = !isVisible;\n    if (isVisible) {\n        const { textColor, color: backgroundColor } = props.color!;\n\n        target.style.backgroundColor = backgroundColor;\n        if (isTextSwatch) {\n            target.style.color = textColor;\n            target.querySelector('.swatch-text')!.textContent = renderColorText(\n                {\n                    colorTextType: props.colorTextType!,\n                    hexColor: backgroundColor,\n                },\n            );\n        }\n    }\n}\n","import { ColorTextType } from './render-color-text';\nimport { ColorPalette } from '../color-interfaces';\nimport { renderSwatch } from './render-swatch';\n\nexport interface PaletteProps {\n    readonly colors?: ColorPalette;\n    readonly colorTextType?: ColorTextType;\n}\n\nexport const COLOR_CLASSES: ReadonlyMap<keyof ColorPalette, string> = new Map(\n    Object.entries({\n        vibrant: 'vibrant',\n        darkVibrant: 'dark-vibrant',\n        lightVibrant: 'light-vibrant',\n        muted: 'muted',\n        darkMuted: 'dark-muted',\n        lightMuted: 'light-muted',\n    }) as [keyof ColorPalette, string][],\n);\n\n/**\n * Renders a palette - the associated colors of an image.\n */\nexport function renderPalette(props: PaletteProps, target: ParentNode) {\n    const { colors, colorTextType } = props;\n    for (const [propName, className] of COLOR_CLASSES) {\n        const swatchTarget = target.querySelector<HTMLElement>(\n            `.swatch.${className}`,\n        )!;\n        renderSwatch(\n            {\n                colorTextType,\n                color: colors != undefined ? colors[propName] : undefined,\n            },\n            swatchTarget,\n        );\n    }\n}\n","interface ImageProps {\n    readonly imgSrc: string;\n    readonly name: string;\n}\n\n/**\n * Renders an image for palette.\n */\nexport function renderImage(props: ImageProps, target: HTMLImageElement) {\n    target.src = props.imgSrc;\n    target.alt = props.name;\n}\n","import { PaletteEntry } from '../entry';\nimport { revokeObjectUrlOnLoad } from '../revoke-object-url';\nimport { renderPalette } from './render-palette';\nimport { renderImage } from './render-image';\n\nconst LIST_ELEMENT = document.querySelector('#grid-items')!;\nconst LIST_ITEM_TEMPLATE = document.querySelector<HTMLTemplateElement>(\n    '#grid-item-template',\n)!;\n\nexport function addPalettesToList(props: {\n    items: ReadonlyArray<PaletteEntry>;\n}) {\n    const fragment = document.createDocumentFragment();\n    for (const child of props.items) {\n        const template = document.importNode(LIST_ITEM_TEMPLATE.content, true);\n        renderImage(\n            child,\n            template.querySelector<HTMLImageElement>('img.preview')!,\n        );\n        renderPalette({ ...child, colorTextType: undefined }, template);\n\n        const link = template.querySelector('a')!;\n        link.id = `i${child.timestamp}`;\n        link.href = `#i${child.timestamp}`;\n\n        template\n            .querySelector('img')!\n            .addEventListener('load', revokeObjectUrlOnLoad);\n\n        fragment.appendChild(template);\n    }\n    LIST_ELEMENT.appendChild(fragment);\n}\n\nexport function deletePalettesFromList(props: {\n    timestamps: ReadonlyArray<number>;\n}) {\n    props.timestamps.forEach(timestamp => {\n        const link = document.querySelector(`#i${timestamp}`);\n        const li = link?.parentElement;\n        if (li) {\n            LIST_ELEMENT.removeChild(li);\n        }\n    });\n}\n","interface BackButtonProps {\n    /**\n     * True if image was loaded when the document loaded.\n     * Changes back button behavior so that it doesn't navigate away\n     * from the page accidentally.\n     */\n    readonly firstLoad: boolean;\n}\n\nconst BACK_BUTTON = document.querySelector<HTMLButtonElement>('#back')!;\n\n/**\n * Set the `data-firstload` on the back button.\n */\nexport function displayBackButton(props: BackButtonProps) {\n    if (props.firstLoad) {\n        BACK_BUTTON.dataset.firstload = 'firstload';\n    } else {\n        delete BACK_BUTTON.dataset.firstload;\n    }\n}\n\n/**\n * When the back button is clicked, only go back if the `data-firstload`\n * attribute is not present.\n */\nexport function goBack() {\n    if (!BACK_BUTTON.dataset.firstload) {\n        history.back();\n    }\n}\n","import { PaletteEntry } from '../entry';\nimport { displayBackButton, goBack } from './back-button';\nimport { ColorTextType } from './render-color-text';\nimport { renderImage } from './render-image';\nimport { renderPalette } from './render-palette';\n\ninterface DisplayMainPaletteProps {\n    /** Data to display on the main palette */\n    readonly data?: PaletteEntry;\n    /**\n     * True if this image was loaded when the document loaded.\n     * Changes back button behavior so that it doesn't navigate away\n     * from the page accidentally.\n     */\n    readonly firstLoad: boolean;\n    /**\n     * True if the page URL should be updated with this image's ID.\n     * Unnecessary if a link was clicked to open this image.\n     */\n    readonly updateHash: boolean;\n}\n\nconst MAIN_PALETTE_ELEMENT = document.querySelector('#palette')!;\nconst MAIN_PALETTE_IMAGE = MAIN_PALETTE_ELEMENT.querySelector<HTMLImageElement>(\n    'img.preview',\n)!;\nconst COLOR_DISPLAY_SELECT = document.querySelector<HTMLSelectElement>(\n    '#color-display',\n)!;\nconst TITLE = 'Color Breakdown';\n\nfunction closeMainPalette() {\n    MAIN_PALETTE_ELEMENT.classList.remove('is-open'); // Close on mobile\n\n    // Update history\n    history.replaceState(false, TITLE, '.');\n    document.title = TITLE;\n}\n\n/** Stores current select change listener so it can be replaced later */\nlet listener: (() => void) | undefined = undefined;\n\nexport function displayMainPalette(props: DisplayMainPaletteProps) {\n    if (listener) {\n        COLOR_DISPLAY_SELECT.removeEventListener('change', listener);\n    }\n\n    const colorTextType = COLOR_DISPLAY_SELECT.value as ColorTextType;\n    displayBackButton(props);\n\n    // Show the selected image or a placeholder\n    if (props.data) {\n        function render() {\n            renderPalette(\n                { ...props.data!, colorTextType },\n                MAIN_PALETTE_ELEMENT,\n            );\n        }\n        render();\n        renderImage(props.data, MAIN_PALETTE_IMAGE); // Only render image first time\n        COLOR_DISPLAY_SELECT.addEventListener('change', render);\n        listener = render;\n\n        MAIN_PALETTE_ELEMENT.classList.add('is-open'); // Open on mobile\n        const title = `${props.data.name} | ${TITLE}`;\n        document.title = title;\n\n        if (props.updateHash) {\n            history.replaceState(true, title, `#${props.data.timestamp}`);\n        }\n    } else {\n        renderPalette(\n            { colors: undefined, colorTextType },\n            MAIN_PALETTE_ELEMENT,\n        );\n        renderImage(\n            { imgSrc: 'img/placeholder.svg', name: 'No image' },\n            MAIN_PALETTE_IMAGE,\n        );\n        listener = undefined;\n        closeMainPalette();\n    }\n}\n\nexport function handleBackButton() {\n    goBack();\n    closeMainPalette();\n}\n","import { PaletteEntry } from '../entry';\nimport { addPalettesToList, deletePalettesFromList } from './list';\nimport { displayMainPalette } from './main-palette';\n\ninterface AddAction {\n    readonly type: 'ADD';\n    readonly payload: ReadonlyArray<PaletteEntry>;\n}\n\ninterface RemoveAction {\n    readonly type: 'REMOVE';\n    readonly payload: ReadonlyArray<number>;\n}\n\ninterface DisplayAction {\n    readonly type: 'DISPLAY';\n    readonly payload: {\n        readonly entry?: PaletteEntry;\n        readonly firstLoad: boolean;\n        readonly updateHash: boolean;\n    };\n}\n\ninterface ErrorAction {\n    readonly type: 'ERROR';\n    readonly payload: string;\n}\n\nexport type UiAction = AddAction | RemoveAction | DisplayAction | ErrorAction;\n\nexport function handleMessage(action: UiAction) {\n    console.log(action.type, action.payload);\n    switch (action.type) {\n        case 'ADD':\n            addPalettesToList({ items: action.payload });\n            return;\n        case 'REMOVE':\n            deletePalettesFromList({ timestamps: action.payload });\n            return;\n        case 'DISPLAY':\n            displayMainPalette({\n                data: action.payload.entry,\n                firstLoad: action.payload.firstLoad,\n                updateHash: action.payload.updateHash,\n            });\n            return;\n        case 'ERROR':\n            console.error(action.payload);\n            return;\n    }\n}\n","import { ColorPalette, ColorSwatch } from '../color-interfaces';\nimport { PaletteEntry } from '../entry';\n\nconst VibrantModule = import('node-vibrant');\n\n/**\n * Generate a palette from the given image source.\n */\nexport async function dataFromImageUrl({\n    name,\n    url,\n}: {\n    name: string;\n    url: string;\n}): Promise<PaletteEntry> {\n    const { default: Vibrant } = await VibrantModule;\n    const palette = await Vibrant.from(url).getPalette();\n\n    // This isn't exported directly by node-vibrant, so pull it out here.\n    type Swatch = typeof palette['Muted'];\n    function toSwatch(vibrantSwatch: Swatch): ColorSwatch | undefined {\n        if (!vibrantSwatch) return undefined;\n        return {\n            color: vibrantSwatch.getHex(),\n            textColor: vibrantSwatch.getBodyTextColor(),\n        };\n    }\n\n    const timestamp = Date.now();\n    const colors: ColorPalette = {\n        vibrant: toSwatch(palette.Vibrant),\n        darkVibrant: toSwatch(palette.DarkVibrant),\n        lightVibrant: toSwatch(palette.LightVibrant),\n        muted: toSwatch(palette.Muted),\n        darkMuted: toSwatch(palette.DarkMuted),\n        lightMuted: toSwatch(palette.LightMuted),\n    };\n\n    return { timestamp, colors, imgSrc: url, name };\n}\n\n/**\n * Generate a palette entry for each file in the FileList.\n * Filters the files to only include images, then creates an object URL for\n * each and uses node-vibrant to process them.\n */\nexport function paletteFromImages(files: FileList | null | undefined) {\n    const imageUrls = Array.from(files || [])\n        .filter(file => file.type.match(/^image\\//) != undefined)\n        .map(file => ({ name: file.name, url: URL.createObjectURL(file) }));\n\n    return Promise.all(imageUrls.map(dataFromImageUrl));\n}\n","import { WorkerAction } from '../db-worker/handle-message';\nimport { revokeObjectUrlOnLoad } from '../revoke-object-url';\nimport { copySwatchText } from './clipboard';\nimport { handleMessage } from './handle-message';\nimport { paletteFromImages } from './process-images';\nimport { handleBackButton } from './main-palette';\n\nconst PASSIVE: AddEventListenerOptions = { passive: true };\nconst HASH_PREFIX = '#i';\n\nconst dbWorker = new Worker('js/db-worker.js');\nfunction postMessage(action: WorkerAction) {\n    dbWorker.postMessage(action);\n}\n\nfunction getOpenItem() {\n    if (location.hash.startsWith(HASH_PREFIX)) {\n        return parseInt(location.hash.slice(HASH_PREFIX.length), 10);\n    } else {\n        return undefined;\n    }\n}\n\nconst form = document.querySelector<HTMLFormElement>('#new-palette-entry')!;\nconst fileInput = form.elements.namedItem('imagefile') as HTMLInputElement;\nasync function saveImages() {\n    const entries = await paletteFromImages(fileInput.files);\n    postMessage({ type: 'SAVE', payload: entries });\n}\n\n// Handle change of hash (which opens a new image).\n// Deals with manually setting URL and clicking on history links.\nloadFromHash(true);\nwindow.addEventListener('hashchange', () => loadFromHash(false));\nfunction loadFromHash(firstLoad: boolean) {\n    const timestamp = getOpenItem();\n    if (timestamp != undefined) {\n        postMessage({ type: 'OPEN', payload: { timestamp, firstLoad } });\n    }\n}\n\n// Handle messages from DB worker\ndbWorker.addEventListener('message', evt => handleMessage(evt.data));\n\n// Revoke object URLs on the main palette image on load\ndocument\n    .querySelector<HTMLImageElement>('.palette-image')!\n    .addEventListener('load', revokeObjectUrlOnLoad);\n\n// Close palette when back is clicked\ndocument\n    .querySelector('#back')!\n    .addEventListener('click', handleBackButton, PASSIVE);\n\n// Delete current palette when delete is clicked\ndocument.querySelector('#delete')!.addEventListener(\n    'click',\n    () => {\n        const timestamp = getOpenItem();\n        if (timestamp != undefined) {\n            postMessage({\n                type: 'DELETE',\n                payload: { timestamp, current: true },\n            });\n        }\n    },\n    PASSIVE,\n);\n\n// Copy the text of a swatch on click\ndocument\n    .querySelector('.palette-colors')!\n    .addEventListener('click', copySwatchText, PASSIVE);\n\n// Save images when the add button is used.\nform.addEventListener('submit', evt => {\n    evt.preventDefault();\n    saveImages();\n});\nfileInput.addEventListener('change', saveImages, PASSIVE);\n\n// File input focus polyfill for Firefox\nfileInput.addEventListener(\n    'focus',\n    () => fileInput.classList.add('focus'),\n    PASSIVE,\n);\nfileInput.addEventListener(\n    'blur',\n    () => fileInput.classList.remove('focus'),\n    PASSIVE,\n);\n\nimport('insights-js').then(insights => {\n    insights.init('BRUajm5Rl0FGGGhk');\n    insights.trackPages();\n});\n"],"names":["revokeObjectUrlOnLoad","evt","img","target","url","src","URL","protocol","revokeObjectURL","ClipboardModule","navigator","clipboard","import","renderColorText","props","colorTextType","rgb","hex","match","exec","undefined","map","s","parseInt","hexToRgb","hexColor","r","g","b","h","l","max","Math","min","d","Error","rgbToHsl","n","round","renderSwatch","isVisible","color","isTextSwatch","hidden","textColor","backgroundColor","style","querySelector","textContent","COLOR_CLASSES","Map","Object","entries","vibrant","darkVibrant","lightVibrant","muted","darkMuted","lightMuted","renderPalette","colors","propName","className","swatchTarget","renderImage","imgSrc","alt","name","LIST_ELEMENT","document","LIST_ITEM_TEMPLATE","BACK_BUTTON","MAIN_PALETTE_ELEMENT","MAIN_PALETTE_IMAGE","COLOR_DISPLAY_SELECT","TITLE","closeMainPalette","classList","remove","history","replaceState","title","listener","displayMainPalette","removeEventListener","value","firstLoad","dataset","firstload","displayBackButton","data","render","addEventListener","add","updateHash","timestamp","handleMessage","action","console","log","type","payload","fragment","createDocumentFragment","child","items","template","importNode","content","link","id","href","appendChild","addPalettesToList","timestamps","forEach","li","parentElement","removeChild","entry","error","VibrantModule","async","dataFromImageUrl","default","Vibrant","palette","from","getPalette","toSwatch","vibrantSwatch","getHex","getBodyTextColor","Date","now","DarkVibrant","LightVibrant","Muted","DarkMuted","LightMuted","PASSIVE","passive","HASH_PREFIX","dbWorker","Worker","postMessage","getOpenItem","location","hash","startsWith","slice","length","form","fileInput","elements","namedItem","saveImages","files","imageUrls","Array","filter","file","createObjectURL","Promise","all","paletteFromImages","loadFromHash","window","back","current","event","btn","closest","span","writeText","preventDefault","then","insights","init","trackPages"],"mappings":"SAagBA,EAAsBC,GAClC,MAAMC,EAAMD,EAAIE,WAXcC,EAAAA,EAYZF,EAAIG,IAXQ,UAA1B,IAAIC,IAAIF,GAAKG,UACbD,IAAIE,gBAAgBJ,GCL5B,MAAMK,EAAkBC,UAAUC,WAAaC,OAAO,6CCqDtCC,EAAgBC,GAC5B,OAAQA,EAAMC,eACV,IAAK,MACL,IAAK,MACD,MAAMC,EAhDlB,SAAkBC,GACd,IAAIC,EAAQ,4CAA4CC,KAAKF,GAC7D,GAAaG,MAATF,EAAoB,OAGxB,MADe,CAACA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IAAIG,IAAIC,GAAKC,SAASD,EAAG,KA4C/CE,CAASV,EAAMW,UAC3B,GAAWL,MAAPJ,EACA,OAAOF,EAAMW,SAEjB,MAAOC,EAAGC,EAAGC,GAAKZ,EAClB,GAA4B,QAAxBF,EAAMC,cACN,MAAO,IAAIW,MAAMC,MAAMC,IAE3B,MAAOC,EAAGP,EAAGQ,GAjDzB,SAAkBJ,EAAWC,EAAWC,GACpCF,GAAK,IACLC,GAAK,IACLC,GAAK,IACL,IAEIC,EACAP,EAHAS,EAAMC,KAAKD,IAAIL,EAAGC,EAAGC,GACrBK,EAAMD,KAAKC,IAAIP,EAAGC,EAAGC,GAGrBE,GAAKC,EAAME,GAAO,EACtB,GAAIF,IAAQE,EACRJ,EAAIP,EAAI,MACL,CACH,IAAIY,EAAIH,EAAME,EAEd,OADAX,EAAIQ,EAAI,GAAMI,GAAK,EAAIH,EAAME,GAAOC,GAAKH,EAAME,GACvCF,GACJ,KAAKL,EACDG,GAAKF,EAAIC,GAAKM,GAAKP,EAAIC,EAAI,EAAI,GAC/B,MACJ,KAAKD,EACDE,GAAKD,EAAIF,GAAKQ,EAAI,EAClB,MACJ,KAAKN,EACDC,GAAKH,EAAIC,GAAKO,EAAI,EAClB,MACJ,QACI,MAAM,IAAIC,MAGlBN,GAAK,EAET,MAAO,CAACA,EAAGP,EAAGQ,GAmBYM,CAASV,EAAGC,EAAGC,GAAGP,IAAIgB,GAAKL,KAAKM,MAAU,IAAJD,IACxD,MAAO,IAAIR,MAAMP,MAAMQ,IAC3B,IAAK,MACL,QACI,OAAOhB,EAAMW,mBC1DTc,EAAazB,EAAoBX,GAC7C,MAAMqC,EAA2BpB,MAAfN,EAAM2B,MAClBC,EAAsCtB,MAAvBN,EAAMC,cAE3B,GADAZ,EAAOwC,QAAUH,EACbA,EAAW,CACX,MAAMI,UAAEA,EAAWH,MAAOI,GAAoB/B,EAAM2B,MAEpDtC,EAAO2C,MAAMD,gBAAkBA,EAC3BH,IACAvC,EAAO2C,MAAML,MAAQG,EACrBzC,EAAO4C,cAAc,gBAAiBC,YAAcnC,EAChD,CACIE,cAAeD,EAAMC,cACrBU,SAAUoB,MCfvB,MAAMI,EAAyD,IAAIC,IACtEC,OAAOC,QAAQ,CACXC,QAAS,UACTC,YAAa,eACbC,aAAc,gBACdC,MAAO,QACPC,UAAW,aACXC,WAAY,0BAOJC,EAAc7C,EAAqBX,GAC/C,MAAMyD,OAAEA,EAAM7C,cAAEA,GAAkBD,EAClC,IAAK,MAAO+C,EAAUC,KAAcb,EAAe,CAC/C,MAAMc,EAAe5D,EAAO4C,cACxB,WAAWe,KAEfvB,EACI,CACIxB,cAAAA,EACA0B,MAAiBrB,MAAVwC,EAAsBA,EAAOC,QAAYzC,GAEpD2C,aC1BIC,EAAYlD,EAAmBX,GAC3CA,EAAOE,IAAMS,EAAMmD,OACnB9D,EAAO+D,IAAMpD,EAAMqD,KCLvB,MAAMC,EAAeC,SAAStB,cAAc,eACtCuB,EAAqBD,SAAStB,cAChC,uBCEJ,MAAMwB,EAAcF,SAAStB,cAAiC,SCa9D,MAAMyB,EAAuBH,SAAStB,cAAc,YAC9C0B,EAAqBD,EAAqBzB,cAC5C,eAEE2B,EAAuBL,SAAStB,cAClC,kBAEE4B,EAAQ,kBAEd,SAASC,IACLJ,EAAqBK,UAAUC,OAAO,WAGtCC,QAAQC,cAAa,EAAOL,EAAO,KACnCN,SAASY,MAAQN,EAIrB,IAAIO,OAAqC9D,WAEzB+D,EAAmBrE,GAC3BoE,GACAR,EAAqBU,oBAAoB,SAAUF,GAGvD,MAAMnE,EAAgB2D,EAAqBW,MAI3C,YDrC8BvE,GAC1BA,EAAMwE,UACNf,EAAYgB,QAAQC,UAAY,mBAEzBjB,EAAYgB,QAAQC,UC8B/BC,CAAkB3E,GAGdA,EAAM4E,KAAM,CACZ,SAASC,IACLhC,EACI,IAAK7C,EAAM4E,KAAO3E,cAAAA,GAClByD,GAGRmB,IACA3B,EAAYlD,EAAM4E,KAAMjB,GACxBC,EAAqBkB,iBAAiB,SAAUD,GAChDT,EAAWS,EAEXnB,EAAqBK,UAAUgB,IAAI,WACnC,MAAMZ,EAAQ,GAAGnE,EAAM4E,KAAKvB,UAAUQ,IACtCN,SAASY,MAAQA,EAEbnE,EAAMgF,YACNf,QAAQC,cAAa,EAAMC,EAAO,IAAInE,EAAM4E,KAAKK,kBAGrDpC,EACI,CAAEC,YAAQxC,EAAWL,cAAAA,GACrByD,GAEJR,EACI,CAAEC,OAAQ,sBAAuBE,KAAM,YACvCM,GAEJS,OAAW9D,EACXwD,aClDQoB,EAAcC,GAE1B,OADAC,QAAQC,IAAIF,EAAOG,KAAMH,EAAOI,SACxBJ,EAAOG,MACX,IAAK,MAED,qBHzBsBtF,GAG9B,MAAMwF,EAAWjC,SAASkC,yBAC1B,IAAK,MAAMC,KAAS1F,EAAM2F,MAAO,CAC7B,MAAMC,EAAWrC,SAASsC,WAAWrC,EAAmBsC,SAAS,GACjE5C,EACIwC,EACAE,EAAS3D,cAAgC,gBAE7CY,EAAc,IAAK6C,EAAOzF,mBAAeK,GAAasF,GAEtD,MAAMG,EAAOH,EAAS3D,cAAc,KACpC8D,EAAKC,GAAK,IAAIN,EAAMT,YACpBc,EAAKE,KAAO,KAAKP,EAAMT,YAEvBW,EACK3D,cAAc,OACd6C,iBAAiB,OAAQ5F,GAE9BsG,EAASU,YAAYN,GAEzBtC,EAAa4C,YAAYV,GGEjBW,CAAkB,CAAER,MAAOR,EAAOI,UAEtC,IAAK,SAED,WADuB,CAAEa,WAAYjB,EAAOI,SHC9Ca,WAAWC,QAAQpB,UACrB,MACMqB,YADO/C,SAAStB,cAAc,KAAKgD,2BACxBsB,cACbD,GACAhD,EAAakD,YAAYF,KGH7B,IAAK,UAMD,YALAjC,EAAmB,CACfO,KAAMO,EAAOI,QAAQkB,MACrBjC,UAAWW,EAAOI,QAAQf,UAC1BQ,WAAYG,EAAOI,QAAQP,aAGnC,IAAK,QAED,YADAI,QAAQsB,MAAMvB,EAAOI,UC5CjC,MAAMoB,EAAgB7G,OAAO,kCAK7B8G,eAAsBC,GAAiBxD,KACnCA,EAAI/D,IACJA,IAKA,MAAQwH,QAASC,SAAkBJ,EAC7BK,QAAgBD,EAAQE,KAAK3H,GAAK4H,aAIxC,SAASC,EAASC,GACd,GAAKA,EACL,MAAO,CACHzF,MAAOyF,EAAcC,SACrBvF,UAAWsF,EAAcE,oBAcjC,MAAO,CAAErC,UAVSsC,KAAKC,MAUH1E,OATS,CACzBP,QAAS4E,EAASH,EAAQD,SAC1BvE,YAAa2E,EAASH,EAAQS,aAC9BhF,aAAc0E,EAASH,EAAQU,cAC/BhF,MAAOyE,EAASH,EAAQW,OACxBhF,UAAWwE,EAASH,EAAQY,WAC5BhF,WAAYuE,EAASH,EAAQa,aAGL1E,OAAQ7D,EAAK+D,KAAAA,GC/B7C,MAAMyE,EAAmC,CAAEC,SAAS,GAC9CC,EAAc,KAEdC,EAAW,IAAIC,OAAO,mBAC5B,SAASC,EAAYhD,GACjB8C,EAASE,YAAYhD,GAGzB,SAASiD,IACL,OAAIC,SAASC,KAAKC,WAAWP,GAClBvH,SAAS4H,SAASC,KAAKE,MAAMR,EAAYS,QAAS,SAEzD,EAIR,MAAMC,EAAOnF,SAAStB,cAA+B,sBAC/C0G,EAAYD,EAAKE,SAASC,UAAU,aAC1CjC,eAAekC,IAEXX,EAAY,CAAE7C,KAAM,OAAQC,uBDmBEwD,GAC9B,MAAMC,EAAYC,MAAMhC,KAAK8B,GAAS,IACjCG,OAAOC,GAAuC7I,MAA/B6I,EAAK7D,KAAKlF,MAAM,aAC/BG,IAAI4I,KAAW9F,KAAM8F,EAAK9F,KAAM/D,IAAKE,IAAI4J,gBAAgBD,MAE9D,OAAOE,QAAQC,IAAIN,EAAUzI,IAAIsG,ICzBX0C,CAAkBZ,EAAUI,SAQtD,SAASS,EAAahF,GAClB,MAAMS,EAAYmD,IACD9H,MAAb2E,GACAkD,EAAY,CAAE7C,KAAM,OAAQC,QAAS,CAAEN,UAAAA,EAAWT,UAAAA,KAL1DgF,GAAa,GACbC,OAAO3E,iBAAiB,aAAc,IAAM0E,GAAa,IASzDvB,EAASnD,iBAAiB,UAAW3F,GAAO+F,EAAc/F,EAAIyF,OAG9DrB,SACKtB,cAAgC,kBAChC6C,iBAAiB,OAAQ5F,GAG9BqE,SACKtB,cAAc,SACd6C,iBAAiB,SHgCtB,WDzDSrB,EAAYgB,QAAQC,WACrBT,QAAQyF,OC0DZ5F,MGlC6CgE,GAGjDvE,SAAStB,cAAc,WAAY6C,iBAC/B,QACA,KACI,MAAMG,EAAYmD,IACD9H,MAAb2E,GACAkD,EAAY,CACR7C,KAAM,SACNC,QAAS,CAAEN,UAAAA,EAAW0E,SAAS,MAI3C7B,GAIJvE,SACKtB,cAAc,mBACd6C,iBAAiB,SVlEf8B,eAA8BgD,GACjC,MAAMC,EAAOD,EAAMvK,OAAmByK,QAAQ,iBACxCC,EAAOF,GAAOA,EAAI5H,cAAc,gBAChCC,EAAc6H,GAAQA,EAAK7H,YAEjC,GAAIA,EAAa,CACb,MAAMrC,QAAkBF,QAClBE,EAAUmK,UAAU9H,MU2Da4F,GAG/CY,EAAK5D,iBAAiB,SAAU3F,IAC5BA,EAAI8K,iBACJnB,MAEJH,EAAU7D,iBAAiB,SAAUgE,EAAYhB,GAGjDa,EAAU7D,iBACN,QACA,IAAM6D,EAAU5E,UAAUgB,IAAI,SAC9B+C,GAEJa,EAAU7D,iBACN,OACA,IAAM6D,EAAU5E,UAAUC,OAAO,SACjC8D,GAGJhI,OAAO,sBAAeoK,KAAKC,IACvBA,EAASC,KAAK,oBACdD,EAASE"}