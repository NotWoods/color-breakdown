{"version":3,"file":"insights-js.es5-2df67ad4.js","sources":["../../node_modules/insights-js/dist/insights-js.es5.js"],"sourcesContent":["function isInBrowser() {\r\n    return typeof window !== \"undefined\";\r\n}\r\n/**\r\n * Get the current host, including the protocol, origin and port (if any).\r\n *\r\n * Does **not** end with a trailing \"/\".\r\n */\r\nfunction getHost() {\r\n    return location.protocol + \"//\" + location.host;\r\n}\r\nfunction isReferrerSameHost() {\r\n    if (!isInBrowser()) {\r\n        return false;\r\n    }\r\n    var referrer = document.referrer || \"\";\r\n    var host = getHost();\r\n    return referrer.substr(0, host.length) === host;\r\n}\n\n/**\r\n * Get the preferred browser locale, of the form: xx, xx-YY or falsy\r\n */\r\nfunction getLocale() {\r\n    var locale = typeof navigator.languages !== \"undefined\" ? navigator.languages[0] : navigator.language;\r\n    if (locale && locale.length === 5 && locale[2] === \"-\") {\r\n        return locale.substr(0, 3) + locale.substr(3).toLocaleUpperCase();\r\n    }\r\n    return locale;\r\n}\r\n/**\r\n * Track the default locale of the current user.\r\n */\r\nfunction locale() {\r\n    if (!isInBrowser()) {\r\n        return { type: \"locale\", value: \"<not-in-browser>\" };\r\n    }\r\n    var value = getLocale() || \"<none>\";\r\n    return { type: \"locale\", value: value };\r\n}\r\nfunction getScreenType() {\r\n    var width = window.innerWidth;\r\n    if (width <= 414)\r\n        return \"XS\";\r\n    if (width <= 800)\r\n        return \"S\";\r\n    if (width <= 1200)\r\n        return \"M\";\r\n    if (width <= 1600)\r\n        return \"L\";\r\n    return \"XL\";\r\n}\r\n/**\r\n * Track the screen type of the current user, based on window size:\r\n *\r\n * - width <= 414: XS -> phone\r\n * - width <= 800: S -> tablet\r\n * - width <= 1200: M -> small laptop\r\n * - width <= 1600: L -> large laptop\r\n * - width > 1440: XL -> large desktop\r\n */\r\nfunction screenType() {\r\n    if (!isInBrowser()) {\r\n        return { type: \"screen-type\", value: \"<not-in-browser>\" };\r\n    }\r\n    return { type: \"screen-type\", value: getScreenType() };\r\n}\r\n/**\r\n * Track the referrer on the current page, or `<none>` if the page has no referrer.\r\n */\r\nfunction referrer() {\r\n    if (!isInBrowser()) {\r\n        return { type: \"referrer\", value: \"<not-in-browser>\" };\r\n    }\r\n    if (isReferrerSameHost()) {\r\n        return { type: \"referrer\", value: \"<none>\" };\r\n    }\r\n    return { type: \"referrer\", value: document.referrer || \"<none>\" };\r\n}\r\n/**\r\n * Track the current path within the application.\r\n * By default, does not log the `location.hash` nor the `location.search`\r\n *\r\n * @param hash `true` to log the hash, `false` by default\r\n * @param search `true` to log the hash, `false` by default\r\n */\r\nfunction path(hash, search) {\r\n    if (hash === void 0) { hash = false; }\r\n    if (search === void 0) { search = false; }\r\n    if (!isInBrowser()) {\r\n        return { type: \"path\", value: \"<not-in-browser>\" };\r\n    }\r\n    var value = window.location.pathname;\r\n    var _hash = window.location.hash;\r\n    var _search = window.location.search;\r\n    if (hash && search) {\r\n        // the hash contains the search\r\n        value += _hash;\r\n    }\r\n    else if (hash) {\r\n        value += _hash.substr(0, _hash.length - _search.length);\r\n    }\r\n    else if (search) {\r\n        value += _search;\r\n    }\r\n    return { type: \"path\", value: value };\r\n}\r\n/**\r\n * Track a transition between two values.\r\n *\r\n * @param previous The previous value\r\n * @param next The next value\r\n */\r\nfunction transition(previous, next) {\r\n    return { type: \"transition\", value: previous + \"  ->  \" + next };\r\n}\r\n/**\r\n * Track a duration at several intervals:\r\n *\r\n * - < 5 seconds\r\n * - < 15 seconds\r\n * - < 30 seconds\r\n * - < 1 minute\r\n * - < 5 minutes\r\n * - \\> 5 minutes\r\n *\r\n * @param durationMs the duration to encode, in milliseconds\r\n */\r\nfunction durationInterval(durationMs, prefix) {\r\n    if (prefix === void 0) { prefix = \"\"; }\r\n    if (durationMs < 5000) {\r\n        return { type: \"duration-interval\", value: prefix + \"< 5s\" };\r\n    }\r\n    if (durationMs < 15000) {\r\n        return { type: \"duration-interval\", value: prefix + \"< 15s\" };\r\n    }\r\n    if (durationMs < 30000) {\r\n        return { type: \"duration-interval\", value: prefix + \"< 30s\" };\r\n    }\r\n    if (durationMs < 60000) {\r\n        return { type: \"duration-interval\", value: prefix + \"< 1m\" };\r\n    }\r\n    if (durationMs < 5 * 60000) {\r\n        return { type: \"duration-interval\", value: prefix + \"< 5m\" };\r\n    }\r\n    return { type: \"duration-interval\", value: prefix + \"> 5m\" };\r\n}\n\nvar parameters = /*#__PURE__*/Object.freeze({\n  locale: locale,\n  screenType: screenType,\n  referrer: referrer,\n  path: path,\n  transition: transition,\n  durationInterval: durationInterval\n});\n\n/**\r\n * The default options.\r\n */\r\nvar defaultOptions = {};\r\n/**\r\n * A class that contains a `projectId` and related configuration to track events painlessly.\r\n */\r\nvar App = /** @class */ (function () {\r\n    function App(projectId, options) {\r\n        if (options === void 0) { options = defaultOptions; }\r\n        this.projectId = projectId;\r\n        this.options = options;\r\n        this.uniques = {};\r\n        // variables used when tracking pages\r\n        this.trackPageData = null;\r\n        this.trackPageChange = this.trackPageChange.bind(this);\r\n        this.trackLastPageTimeSpent = this.trackLastPageTimeSpent.bind(this);\r\n    }\r\n    /**\r\n     * Track an occurence of the given event.\r\n     *\r\n     * @param event {TrackEventPayload} The event to track.\r\n     */\r\n    App.prototype.track = function (event) {\r\n        if (this.options.disabled || !isInBrowser()) {\r\n            return Promise.resolve();\r\n        }\r\n        if (event.unique) {\r\n            var stringified = JSON.stringify(event);\r\n            if (this.uniques[stringified])\r\n                return Promise.resolve();\r\n            this.uniques[stringified] = true;\r\n        }\r\n        var body = {\r\n            id: event.id,\r\n            projectId: this.projectId,\r\n            ignoreErrors: this.options.ignoreErrors || false\r\n        };\r\n        if (event.remove)\r\n            body.remove = true;\r\n        if (event.parameters)\r\n            body.parameters = event.parameters;\r\n        if (event.update)\r\n            body.update = true;\r\n        // do not use fetch, for IE compatibility\r\n        var request = new XMLHttpRequest();\r\n        request.open(\"post\", \"https://getinsights.io/app/tics\", true);\r\n        request.setRequestHeader(\"Content-Type\", \"application/json\");\r\n        request.send(JSON.stringify(body));\r\n    };\r\n    /**\r\n     * Tracks page views. This method checks if the URL changed every so often and tracks new pages accordingly.\r\n     *\r\n     * @param options The options to use for the tracking\r\n     *\r\n     * @returns An object of the form `{ stop(): void }` to stop the tracking\r\n     */\r\n    App.prototype.trackPages = function (options) {\r\n        if (!isInBrowser()) {\r\n            return { stop: function () { } };\r\n        }\r\n        if (this.trackPageData) {\r\n            return this.trackPageData.result;\r\n        }\r\n        // Start tracking page changes\r\n        var interval = setInterval(this.trackPageChange, 2000);\r\n        // Calculate the data\r\n        var _a = options || {}, _b = _a.hash, hash = _b === void 0 ? false : _b, _c = _a.search, search = _c === void 0 ? false : _c;\r\n        this.trackPageData = {\r\n            hash: hash,\r\n            search: search,\r\n            path: path(hash, search).value,\r\n            isOnFirstPage: true,\r\n            time: Date.now(),\r\n            result: {\r\n                stop: function () {\r\n                    clearInterval(interval);\r\n                }\r\n            }\r\n        };\r\n        // Track the first/current page view\r\n        this.trackSinglePage(true, this.trackPageData.path);\r\n        window.addEventListener(\"unload\", this.trackLastPageTimeSpent);\r\n        return this.trackPageData.result;\r\n    };\r\n    App.prototype.getPreviousPage = function (first) {\r\n        var dataPath = this.trackPageData && this.trackPageData.path;\r\n        if (!first && dataPath) {\r\n            return dataPath;\r\n        }\r\n        if (isReferrerSameHost()) {\r\n            return document.referrer.replace(getHost(), \"\");\r\n        }\r\n        return document.referrer;\r\n    };\r\n    App.prototype.trackPageChange = function () {\r\n        if (!this.trackPageData)\r\n            return;\r\n        var _a = this.trackPageData, hash = _a.hash, search = _a.search;\r\n        var newPath = path(hash, search).value;\r\n        if (newPath !== this.trackPageData.path) {\r\n            this.trackSinglePage(false, newPath);\r\n        }\r\n    };\r\n    App.prototype.trackSinglePage = function (first, path) {\r\n        if (!this.trackPageData)\r\n            return;\r\n        this.trackPageData.isOnFirstPage = first && !isReferrerSameHost();\r\n        var _a = this.trackPageData, time = _a.time, isOnFirstPage = _a.isOnFirstPage;\r\n        var params = {\r\n            path: path\r\n        };\r\n        if (isOnFirstPage) {\r\n            params.uniqueViews = path;\r\n            params.referrer = referrer();\r\n            params.locale = locale();\r\n            params.screenType = screenType();\r\n        }\r\n        var previous = this.getPreviousPage(first);\r\n        if (previous && previous !== path) {\r\n            params.transitions = transition(previous, path);\r\n            var now = Date.now();\r\n            this.trackPageData.time = now;\r\n            params.duration = durationInterval(now - time, previous + \" - \");\r\n        }\r\n        this.trackPageData.path = path;\r\n        this.track({\r\n            id: \"page-views\",\r\n            parameters: params\r\n        });\r\n    };\r\n    App.prototype.trackLastPageTimeSpent = function () {\r\n        var time = this.trackPageData && this.trackPageData.time;\r\n        if (!time || typeof navigator.sendBeacon !== \"function\" || this.options.disabled || !this.trackPageData) {\r\n            return;\r\n        }\r\n        var _a = this.trackPageData, isOnFirstPage = _a.isOnFirstPage, path = _a.path;\r\n        var params = {};\r\n        // add the duration\r\n        params.duration = durationInterval(Date.now() - time, path + \" - \");\r\n        var nextUrl = (document.activeElement && document.activeElement.href) || \"\";\r\n        var host = getHost();\r\n        if (!nextUrl) {\r\n            // user closed the window\r\n            params.bounces = isOnFirstPage ? \"Yes\" : \"No\";\r\n        }\r\n        else if (nextUrl[0] !== \"/\" && nextUrl.substr(0, host.length) !== getHost()) {\r\n            // link outside of the app\r\n            params.transitions = transition(path, nextUrl);\r\n        }\r\n        // polyfil for IE, this won't always work, but it's better than nothing.\r\n        navigator.sendBeacon =\r\n            navigator.sendBeacon ||\r\n                function (url, body) {\r\n                    var request = new XMLHttpRequest();\r\n                    request.open(\"post\", url, false);\r\n                    request.send(body);\r\n                };\r\n        navigator.sendBeacon(\"https://getinsights.io/app/tics\", JSON.stringify({\r\n            id: \"page-views\",\r\n            projectId: this.projectId,\r\n            parameters: params,\r\n            ignoreErrors: this.options.ignoreErrors || false,\r\n            update: true\r\n        }));\r\n    };\r\n    return App;\r\n}());\n\n/**\r\n * This file is the entry point for the `insights-js` library.\r\n *\r\n * It contains basic methods to initialize and log events:\r\n * ```typescript\r\n * init(projectId: string, options?: AppOptions): App\r\n * track(event: TrackEventPayload): void\r\n * trackPages(options?: TrackPagesOptions): TrackPagesResult\r\n * ```\r\n *\r\n * As well as the `parameters` helpers.\r\n */\r\n/**\r\n * The default application, or `null` if none.\r\n */\r\nvar DEFAULT_APP = null;\r\n/**\r\n * Initialize a default app for the given project with the given options.\r\n *\r\n * @param projectId The project for which to initialize the library\r\n * @param options The options to use\r\n *\r\n * @returns The default app\r\n */\r\nfunction init(projectId, options) {\r\n    if (!isInBrowser() || !!DEFAULT_APP) {\r\n        throw new Error(\"Already initialized!\");\r\n    }\r\n    DEFAULT_APP = new App(projectId, options);\r\n    return DEFAULT_APP;\r\n}\r\n/**\r\n * Tracks an event using the default app, you must call `init()` before calling this.\r\n *\r\n * @param event The event to track\r\n */\r\nfunction track(event) {\r\n    if (!DEFAULT_APP || !isInBrowser())\r\n        return;\r\n    DEFAULT_APP.track(event);\r\n}\r\n/**\r\n * Tracks page views using the default app.\r\n * This method checks if the URL changed every so often and tracks new pages accordingly.\r\n *\r\n * By default, does not track the `location.hash` nor the `location.search`.\r\n *\r\n * @param options The options to use for the tracking\r\n *\r\n * @returns An object of the form `{ stop(): void }` to stop the tracking\r\n */\r\nfunction trackPages(options) {\r\n    if (!DEFAULT_APP || !isInBrowser())\r\n        return { stop: function () { } };\r\n    return DEFAULT_APP.trackPages(options);\r\n}\n\nexport { App, DEFAULT_APP, init, parameters, track, trackPages };\n"],"names":["isInBrowser","window","getHost","location","protocol","host","isReferrerSameHost","referrer","document","substr","length","locale","type","value","navigator","languages","language","toLocaleUpperCase","getLocale","screenType","width","innerWidth","path","hash","search","pathname","_hash","_search","transition","previous","next","durationInterval","durationMs","prefix","parameters","Object","freeze","defaultOptions","App","projectId","options","this","uniques","trackPageData","trackPageChange","bind","trackLastPageTimeSpent","prototype","track","event","disabled","Promise","resolve","unique","stringified","JSON","stringify","body","id","ignoreErrors","remove","update","request","XMLHttpRequest","open","setRequestHeader","send","trackPages","stop","result","interval","setInterval","_a","_b","_c","isOnFirstPage","time","Date","now","clearInterval","trackSinglePage","addEventListener","getPreviousPage","first","dataPath","replace","newPath","params","uniqueViews","transitions","duration","sendBeacon","nextUrl","activeElement","href","bounces","url","DEFAULT_APP","init","Error"],"mappings":"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"}